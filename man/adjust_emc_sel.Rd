% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/adjust_emc_sel.R
\name{adjust_emc_sel}
\alias{adjust_emc_sel}
\title{Adust for exposure misclassification and selection bias.}
\usage{
adjust_emc_sel(
  data,
  exposure,
  outcome,
  confounders = NULL,
  x_model_coefs,
  s_model_coefs,
  level = 0.95
)
}
\arguments{
\item{data}{Dataframe for analysis.}

\item{exposure}{String name of the exposure variable.}

\item{outcome}{String name of the outcome variable.}

\item{confounders}{String name(s) of the confounder(s).
A maximum of three confounders are allowed.}

\item{x_model_coefs}{The regression coefficients corresponding to the model:
\ifelse{html}{\out{logit(P(X=1)) = &delta;<sub>0</sub> +
&delta;<sub>1</sub>X* + &delta;<sub>2</sub>Y +
&delta;<sub>2+j</sub>C<sub>j</sub>, }
where X represents (binary) true exposure, X* is the (binary) misclassified
exposure, Y is the (binary) outcome, C represents the vector of (binary)
measured confounders (if any), and j corresponds to the number of measured
confounders. The number of parameters is therefore
3 + j.}{\eqn{logit(P(X=1)) =}}}

\item{s_model_coefs}{The regression coefficients corresponding to the model:
\ifelse{html}{\out{logit(P(S=1)) = &beta;<sub>0</sub> +
&beta;<sub>1</sub>X* + &beta;<sub>2</sub>Y +
&beta;<sub>2+j</sub>C<sub>j</sub>, } where S represents (binary) selection,
X* is the (binary) misclassified exposure, Y is the (binary) outcome,
C represents the vector of (binary) measured confounders (if any), and j
corresponds to the number of measured confounders. The number of
parameters is therefore 3 + j.}{\eqn{logit(P(S=1)) =}}}

\item{level}{Value from 0-1 representing the full range of the confidence
interval. Default is 0.95.}
}
\description{
\code{adjust_emc_sel} returns the exposure-outcome odds ratio and confidence
interval, adjusted for exposure misclassification and selection bias.
}
\details{
Details
}
\examples{
adjust_emc_sel(
 df_emc_sel,
 exposure = "Xstar",
 outcome = "Y",
 confounders = "C1",
 x_model_coefs = c(-2.78, 1.62, 0.58, 0.34),
 s_model_coefs = c(0.04, 0.18, 0.92, 0.05)
)

}
